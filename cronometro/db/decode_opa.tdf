--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_opa
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3355w[2..0]	: WIRE;
	w_anode3368w[3..0]	: WIRE;
	w_anode3385w[3..0]	: WIRE;
	w_anode3395w[3..0]	: WIRE;
	w_anode3405w[3..0]	: WIRE;
	w_anode3415w[3..0]	: WIRE;
	w_anode3425w[3..0]	: WIRE;
	w_anode3435w[3..0]	: WIRE;
	w_anode3445w[3..0]	: WIRE;
	w_anode3457w[2..0]	: WIRE;
	w_anode3466w[3..0]	: WIRE;
	w_anode3477w[3..0]	: WIRE;
	w_anode3487w[3..0]	: WIRE;
	w_anode3497w[3..0]	: WIRE;
	w_anode3507w[3..0]	: WIRE;
	w_anode3517w[3..0]	: WIRE;
	w_anode3527w[3..0]	: WIRE;
	w_anode3537w[3..0]	: WIRE;
	w_anode3548w[2..0]	: WIRE;
	w_anode3557w[3..0]	: WIRE;
	w_anode3568w[3..0]	: WIRE;
	w_anode3578w[3..0]	: WIRE;
	w_anode3588w[3..0]	: WIRE;
	w_anode3598w[3..0]	: WIRE;
	w_anode3608w[3..0]	: WIRE;
	w_anode3618w[3..0]	: WIRE;
	w_anode3628w[3..0]	: WIRE;
	w_anode3639w[2..0]	: WIRE;
	w_anode3648w[3..0]	: WIRE;
	w_anode3659w[3..0]	: WIRE;
	w_anode3669w[3..0]	: WIRE;
	w_anode3679w[3..0]	: WIRE;
	w_anode3689w[3..0]	: WIRE;
	w_anode3699w[3..0]	: WIRE;
	w_anode3709w[3..0]	: WIRE;
	w_anode3719w[3..0]	: WIRE;
	w_data3353w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode3719w[3..3], w_anode3709w[3..3], w_anode3699w[3..3], w_anode3689w[3..3], w_anode3679w[3..3], w_anode3669w[3..3], w_anode3659w[3..3], w_anode3648w[3..3]), ( w_anode3628w[3..3], w_anode3618w[3..3], w_anode3608w[3..3], w_anode3598w[3..3], w_anode3588w[3..3], w_anode3578w[3..3], w_anode3568w[3..3], w_anode3557w[3..3]), ( w_anode3537w[3..3], w_anode3527w[3..3], w_anode3517w[3..3], w_anode3507w[3..3], w_anode3497w[3..3], w_anode3487w[3..3], w_anode3477w[3..3], w_anode3466w[3..3]), ( w_anode3445w[3..3], w_anode3435w[3..3], w_anode3425w[3..3], w_anode3415w[3..3], w_anode3405w[3..3], w_anode3395w[3..3], w_anode3385w[3..3], w_anode3368w[3..3]));
	w_anode3355w[] = ( (w_anode3355w[1..1] & (! data_wire[4..4])), (w_anode3355w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3368w[] = ( (w_anode3368w[2..2] & (! w_data3353w[2..2])), (w_anode3368w[1..1] & (! w_data3353w[1..1])), (w_anode3368w[0..0] & (! w_data3353w[0..0])), w_anode3355w[2..2]);
	w_anode3385w[] = ( (w_anode3385w[2..2] & (! w_data3353w[2..2])), (w_anode3385w[1..1] & (! w_data3353w[1..1])), (w_anode3385w[0..0] & w_data3353w[0..0]), w_anode3355w[2..2]);
	w_anode3395w[] = ( (w_anode3395w[2..2] & (! w_data3353w[2..2])), (w_anode3395w[1..1] & w_data3353w[1..1]), (w_anode3395w[0..0] & (! w_data3353w[0..0])), w_anode3355w[2..2]);
	w_anode3405w[] = ( (w_anode3405w[2..2] & (! w_data3353w[2..2])), (w_anode3405w[1..1] & w_data3353w[1..1]), (w_anode3405w[0..0] & w_data3353w[0..0]), w_anode3355w[2..2]);
	w_anode3415w[] = ( (w_anode3415w[2..2] & w_data3353w[2..2]), (w_anode3415w[1..1] & (! w_data3353w[1..1])), (w_anode3415w[0..0] & (! w_data3353w[0..0])), w_anode3355w[2..2]);
	w_anode3425w[] = ( (w_anode3425w[2..2] & w_data3353w[2..2]), (w_anode3425w[1..1] & (! w_data3353w[1..1])), (w_anode3425w[0..0] & w_data3353w[0..0]), w_anode3355w[2..2]);
	w_anode3435w[] = ( (w_anode3435w[2..2] & w_data3353w[2..2]), (w_anode3435w[1..1] & w_data3353w[1..1]), (w_anode3435w[0..0] & (! w_data3353w[0..0])), w_anode3355w[2..2]);
	w_anode3445w[] = ( (w_anode3445w[2..2] & w_data3353w[2..2]), (w_anode3445w[1..1] & w_data3353w[1..1]), (w_anode3445w[0..0] & w_data3353w[0..0]), w_anode3355w[2..2]);
	w_anode3457w[] = ( (w_anode3457w[1..1] & (! data_wire[4..4])), (w_anode3457w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3466w[] = ( (w_anode3466w[2..2] & (! w_data3353w[2..2])), (w_anode3466w[1..1] & (! w_data3353w[1..1])), (w_anode3466w[0..0] & (! w_data3353w[0..0])), w_anode3457w[2..2]);
	w_anode3477w[] = ( (w_anode3477w[2..2] & (! w_data3353w[2..2])), (w_anode3477w[1..1] & (! w_data3353w[1..1])), (w_anode3477w[0..0] & w_data3353w[0..0]), w_anode3457w[2..2]);
	w_anode3487w[] = ( (w_anode3487w[2..2] & (! w_data3353w[2..2])), (w_anode3487w[1..1] & w_data3353w[1..1]), (w_anode3487w[0..0] & (! w_data3353w[0..0])), w_anode3457w[2..2]);
	w_anode3497w[] = ( (w_anode3497w[2..2] & (! w_data3353w[2..2])), (w_anode3497w[1..1] & w_data3353w[1..1]), (w_anode3497w[0..0] & w_data3353w[0..0]), w_anode3457w[2..2]);
	w_anode3507w[] = ( (w_anode3507w[2..2] & w_data3353w[2..2]), (w_anode3507w[1..1] & (! w_data3353w[1..1])), (w_anode3507w[0..0] & (! w_data3353w[0..0])), w_anode3457w[2..2]);
	w_anode3517w[] = ( (w_anode3517w[2..2] & w_data3353w[2..2]), (w_anode3517w[1..1] & (! w_data3353w[1..1])), (w_anode3517w[0..0] & w_data3353w[0..0]), w_anode3457w[2..2]);
	w_anode3527w[] = ( (w_anode3527w[2..2] & w_data3353w[2..2]), (w_anode3527w[1..1] & w_data3353w[1..1]), (w_anode3527w[0..0] & (! w_data3353w[0..0])), w_anode3457w[2..2]);
	w_anode3537w[] = ( (w_anode3537w[2..2] & w_data3353w[2..2]), (w_anode3537w[1..1] & w_data3353w[1..1]), (w_anode3537w[0..0] & w_data3353w[0..0]), w_anode3457w[2..2]);
	w_anode3548w[] = ( (w_anode3548w[1..1] & data_wire[4..4]), (w_anode3548w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3557w[] = ( (w_anode3557w[2..2] & (! w_data3353w[2..2])), (w_anode3557w[1..1] & (! w_data3353w[1..1])), (w_anode3557w[0..0] & (! w_data3353w[0..0])), w_anode3548w[2..2]);
	w_anode3568w[] = ( (w_anode3568w[2..2] & (! w_data3353w[2..2])), (w_anode3568w[1..1] & (! w_data3353w[1..1])), (w_anode3568w[0..0] & w_data3353w[0..0]), w_anode3548w[2..2]);
	w_anode3578w[] = ( (w_anode3578w[2..2] & (! w_data3353w[2..2])), (w_anode3578w[1..1] & w_data3353w[1..1]), (w_anode3578w[0..0] & (! w_data3353w[0..0])), w_anode3548w[2..2]);
	w_anode3588w[] = ( (w_anode3588w[2..2] & (! w_data3353w[2..2])), (w_anode3588w[1..1] & w_data3353w[1..1]), (w_anode3588w[0..0] & w_data3353w[0..0]), w_anode3548w[2..2]);
	w_anode3598w[] = ( (w_anode3598w[2..2] & w_data3353w[2..2]), (w_anode3598w[1..1] & (! w_data3353w[1..1])), (w_anode3598w[0..0] & (! w_data3353w[0..0])), w_anode3548w[2..2]);
	w_anode3608w[] = ( (w_anode3608w[2..2] & w_data3353w[2..2]), (w_anode3608w[1..1] & (! w_data3353w[1..1])), (w_anode3608w[0..0] & w_data3353w[0..0]), w_anode3548w[2..2]);
	w_anode3618w[] = ( (w_anode3618w[2..2] & w_data3353w[2..2]), (w_anode3618w[1..1] & w_data3353w[1..1]), (w_anode3618w[0..0] & (! w_data3353w[0..0])), w_anode3548w[2..2]);
	w_anode3628w[] = ( (w_anode3628w[2..2] & w_data3353w[2..2]), (w_anode3628w[1..1] & w_data3353w[1..1]), (w_anode3628w[0..0] & w_data3353w[0..0]), w_anode3548w[2..2]);
	w_anode3639w[] = ( (w_anode3639w[1..1] & data_wire[4..4]), (w_anode3639w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3648w[] = ( (w_anode3648w[2..2] & (! w_data3353w[2..2])), (w_anode3648w[1..1] & (! w_data3353w[1..1])), (w_anode3648w[0..0] & (! w_data3353w[0..0])), w_anode3639w[2..2]);
	w_anode3659w[] = ( (w_anode3659w[2..2] & (! w_data3353w[2..2])), (w_anode3659w[1..1] & (! w_data3353w[1..1])), (w_anode3659w[0..0] & w_data3353w[0..0]), w_anode3639w[2..2]);
	w_anode3669w[] = ( (w_anode3669w[2..2] & (! w_data3353w[2..2])), (w_anode3669w[1..1] & w_data3353w[1..1]), (w_anode3669w[0..0] & (! w_data3353w[0..0])), w_anode3639w[2..2]);
	w_anode3679w[] = ( (w_anode3679w[2..2] & (! w_data3353w[2..2])), (w_anode3679w[1..1] & w_data3353w[1..1]), (w_anode3679w[0..0] & w_data3353w[0..0]), w_anode3639w[2..2]);
	w_anode3689w[] = ( (w_anode3689w[2..2] & w_data3353w[2..2]), (w_anode3689w[1..1] & (! w_data3353w[1..1])), (w_anode3689w[0..0] & (! w_data3353w[0..0])), w_anode3639w[2..2]);
	w_anode3699w[] = ( (w_anode3699w[2..2] & w_data3353w[2..2]), (w_anode3699w[1..1] & (! w_data3353w[1..1])), (w_anode3699w[0..0] & w_data3353w[0..0]), w_anode3639w[2..2]);
	w_anode3709w[] = ( (w_anode3709w[2..2] & w_data3353w[2..2]), (w_anode3709w[1..1] & w_data3353w[1..1]), (w_anode3709w[0..0] & (! w_data3353w[0..0])), w_anode3639w[2..2]);
	w_anode3719w[] = ( (w_anode3719w[2..2] & w_data3353w[2..2]), (w_anode3719w[1..1] & w_data3353w[1..1]), (w_anode3719w[0..0] & w_data3353w[0..0]), w_anode3639w[2..2]);
	w_data3353w[2..0] = data_wire[2..0];
END;
--VALID FILE
